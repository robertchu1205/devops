# apiVersion: kafka.strimzi.io/v1beta2
# kind: KafkaConnect 
# metadata:
#   name: my-connect-cluster
#   annotations:
#     strimzi.io/use-connector-resources: "true" 
# spec:
#   replicas: 3 
#   authentication: 
#     type: tls
#     certificateAndKey:
#       certificate: source.crt
#       key: source.key
#       secretName: my-user-source
#   bootstrapServers: my-cluster-kafka-bootstrap:9092 
#   tls: 
#     trustedCertificates:
#       - secretName: my-cluster-cluster-cert
#         certificate: ca.crt
#       - secretName: my-cluster-cluster-cert
#         certificate: ca2.crt
#   config: 
#     group.id: my-connect-cluster
#     offset.storage.topic: my-connect-cluster-offsets
#     config.storage.topic: my-connect-cluster-configs
#     status.storage.topic: my-connect-cluster-status
#     key.converter: org.apache.kafka.connect.json.JsonConverter
#     value.converter: org.apache.kafka.connect.json.JsonConverter
#     key.converter.schemas.enable: true
#     value.converter.schemas.enable: true
#     config.storage.replication.factor: 3
#     offset.storage.replication.factor: 3
#     status.storage.replication.factor: 3
#   build: 
#     output: 
#       type: docker
#       image: my-registry.io/my-org/my-connect-cluster:latest
#       pushSecret: my-registry-credentials
#     plugins: 
#       - name: debezium-postgres-connector
#         artifacts:
#           - type: tgz
#             url: https://repo1.maven.org/maven2/io/debezium/debezium-connector-postgres/1.3.1.Final/debezium-connector-postgres-1.3.1.Final-plugin.tar.gz
#             sha512sum: 962a12151bdf9a5a30627eebac739955a4fd95a08d373b86bdcea2b4d0c27dd6e1edd5cb548045e115e33a9e69b1b2a352bee24df035a0447cb820077af00c03
#       - name: camel-telegram
#         artifacts:
#           - type: tgz
#             url: https://repo.maven.apache.org/maven2/org/apache/camel/kafkaconnector/camel-telegram-kafka-connector/0.7.0/camel-telegram-kafka-connector-0.7.0-package.tar.gz
#             sha512sum: a9b1ac63e3284bea7836d7d24d84208c49cdf5600070e6bd1535de654f6920b74ad950d51733e8020bf4187870699819f54ef5859c7846ee4081507f48873479
#   externalConfiguration: 
#     env:
#       - name: AWS_ACCESS_KEY_ID
#         valueFrom:
#           secretKeyRef:
#             name: aws-creds
#             key: awsAccessKey
#       - name: AWS_SECRET_ACCESS_KEY
#         valueFrom:
#           secretKeyRef:
#             name: aws-creds
#             key: awsSecretAccessKey
#   resources: 
#     requests:
#       cpu: "1"
#       memory: 2Gi
#     limits:
#       cpu: "2"
#       memory: 2Gi
#   logging: 
#     type: inline
#     loggers:
#       log4j.rootLogger: "INFO"
#   readinessProbe: 
#     initialDelaySeconds: 15
#     timeoutSeconds: 5
#   livenessProbe:
#     initialDelaySeconds: 15
#     timeoutSeconds: 5
#   metricsConfig: 
#     type: jmxPrometheusExporter
#     valueFrom:
#       configMapKeyRef:
#         name: my-config-map
#         key: my-key
#   jvmOptions: 
#     "-Xmx": "1g"
#     "-Xms": "1g"
#   image: my-org/my-image:latest 
#   rack:
#     topologyKey: topology.kubernetes.io/zone 
#   template: 
#     pod:
#       affinity:
#         podAntiAffinity:
#           requiredDuringSchedulingIgnoredDuringExecution:
#             - labelSelector:
#                 matchExpressions:
#                   - key: application
#                     operator: In
#                     values:
#                       - postgresql
#                       - mongodb
#               topologyKey: "kubernetes.io/hostname"
#     connectContainer: 
#       env:
#         - name: JAEGER_SERVICE_NAME
#           value: my-jaeger-service
#         - name: JAEGER_AGENT_HOST
#           value: jaeger-agent-name
#         - name: JAEGER_AGENT_PORT
#           value: "6831"

apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaConnect
metadata:
  name: kafka-connect-1
  namespace: kafka
spec:
  image: imranpochi/strmzi-kafka-connect-with-s3-plugin
  version: 2.2.0
  replicas: 1
  bootstrapServers: qe-toc-preprd-kafka-extnp-bootstrap:9095
  resources:
    requests:
      ephemeral-storage: "100Mi"
    limits:
      ephemeral-storage: "100Mi"
  externalConfiguration:
    env:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: aws-creds
            key: awsAccessKey  
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: aws-creds
            key: awsSecretAccessKey