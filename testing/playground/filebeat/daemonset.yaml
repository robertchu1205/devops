apiVersion: v1
kind: ServiceAccount
metadata:
  name: filebeat
  namespace: nginx
  labels:
    k8s-app: filebeat
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-config
  namespace: nginx
  labels:
    k8s-app: filebeat
data:
  filebeat.yml: |-
    filebeat.inputs:
    - type: container
      paths:
        - /var/log/containers/*nginx-web*.log
      processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"

    # To enable hints based autodiscover, remove `filebeat.inputs` configuration and uncomment this:
    # filebeat.autodiscover:
    #   providers:
    #   - type: kubernetes
    #     node: ${NODE_NAME}
    #     hints.enabled: true
    #     hints.default_config:
    #       type: container
    #       paths:
    #         - /var/log/containers/*nginx-web*.log
      # providers:
      #   - type: kubernetes
      #     host: ${NODE_NAME}
      #     hints.enabled: true
      #     templates:
      #       - condition.contains:
      #           kubernetes.namespace: nginx
      #         config:
      #           - module: nginx
      #             access:
      #               enabled: true
      #               var.paths: ["/var/log/nginx/access.log*"]
      #               subPath: access.log
      #               tags: ["access"]
      #             error:
      #               enabled: true
      #               var.paths: ["/var/log/nginx/error.log*"]
      #               subPath: error.log
      #               tags: ["error"]

    # setup.template.settings:
    #   index.number_of_shards: 1
    # filebeat.config.modules:
    #   path: ${path.config}/modules.d/*.yml
    #   reload.enabled: true

    processors:
      - add_cloud_metadata:
      - add_host_metadata:
      # - add_docker_metadata: ~
      # - add_kubernetes_metadata: ~

    cloud.id: ${ELASTIC_CLOUD_ID}
    cloud.auth: ${ELASTIC_CLOUD_AUTH}

    setup.kibana:
      host: "192.168.9.174:5601"

    output.logstash:
      hosts: ["192.168.9.174:5002"]
      # loadbalance: true
      # index: filebeat
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: filebeat
  namespace: nginx
  labels:
    k8s-app: filebeat
spec:
  selector:
    matchLabels:
      k8s-app: filebeat
  template:
    metadata:
      labels:
        k8s-app: filebeat
    spec:
      serviceAccountName: filebeat
      terminationGracePeriodSeconds: 30
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: filebeat
        image: docker.elastic.co/beats/filebeat:8.4.3
        args: [
          "-c", "/etc/filebeat.yml",
          "-e",
        ]
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: ELASTIC_CLOUD_ID
          value: ""
        - name: ELASTIC_CLOUD_AUTH
          value: ""
        securityContext:
          runAsUser: 0
          # If using Red Hat OpenShift uncomment this:
          privileged: true
        resources:
          # limits:
          #   memory: 200Mi
          requests:
            cpu: 100m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/filebeat.yml
          subPath: filebeat.yml
          readOnly: true
        - name: data
          mountPath: /usr/share/filebeat/data
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: varlog
          mountPath: /var/log
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          # defaultMode: 0640
          name: filebeat-config
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: varlog
        hostPath:
          path: /var/log
      # data folder stores a registry of read status for all files, so we don't send everything again on a Filebeat pod restart
      - name: data
        hostPath:
          # When filebeat runs as non-root user, this directory needs to be writable by group (g+w).
          path: /var/lib/filebeat-data
          type: DirectoryOrCreate
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: filebeat
  labels:
    k8s-app: filebeat
rules:
- apiGroups: [""] # "" indicates the core API group
  resources:
  - namespaces
  - pods
  - nodes
  verbs:
  - get
  - watch
  - list
- apiGroups: ["apps"]
  resources:
    - replicasets
  verbs: ["get", "list", "watch"]
- apiGroups: ["batch"]
  resources:
    - jobs
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: filebeat
subjects:
- kind: ServiceAccount
  name: filebeat
  namespace: nginx
roleRef:
  kind: ClusterRole
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: filebeat
  namespace: nginx
subjects:
  - kind: ServiceAccount
    name: filebeat
    namespace: nginx
roleRef:
  kind: Role
  name: filebeat
  apiGroup: rbac.authorization.k8s.io
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: RoleBinding
# metadata:
#   name: filebeat-kubeadm-config
#   namespace: nginx
# subjects:
#   - kind: ServiceAccount
#     name: filebeat
#     namespace: nginx
# roleRef:
#   kind: Role
#   name: filebeat-kubeadm-config
#   apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: filebeat
  # should be the namespace where filebeat is running
  namespace: nginx
  labels:
    k8s-app: filebeat
rules:
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs: ["get", "create", "update"]
# ---
# apiVersion: rbac.authorization.k8s.io/v1
# kind: Role
# metadata:
#   name: filebeat-kubeadm-config
#   namespace: nginx
#   labels:
#     k8s-app: filebeat
# rules:
#   - apiGroups: [""]
#     resources:
#       - configmaps
#     resourceNames:
#       - kubeadm-config
#     verbs: ["get"]